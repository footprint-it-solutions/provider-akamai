---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: users.iam.akamai.footprintit.net
spec:
  group: iam.akamai.footprintit.net
  names:
    categories:
    - crossplane
    - managed
    - akamai
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  address:
                    description: The user's street address.
                    type: string
                  authGrantsJson:
                    description: A user's per-group role assignments, in JSON form.
                    type: string
                  city:
                    description: The user's city.
                    type: string
                  contactType:
                    description: To help characterize the user, the value can be any
                      that are available from the view-contact-types operation.
                    type: string
                  country:
                    description: As part of the user's location, the value can be
                      any that are available from the view-supported-countries operation.
                    type: string
                  email:
                    description: The user's email address.
                    type: string
                  enableMfa:
                    description: Indicates whether multi-factor authentication is
                      allowed.
                    type: boolean
                  enableTfa:
                    description: Indicates whether two-factor authentication is allowed.
                    type: boolean
                  firstName:
                    description: The user's first name.
                    type: string
                  jobTitle:
                    description: The user's position at your company.
                    type: string
                  lastName:
                    description: The user's surname.
                    type: string
                  lock:
                    description: Flag to block a user account.
                    type: boolean
                  mobilePhone:
                    description: The user's mobile phone number.
                    type: string
                  passwordSecretRef:
                    description: New password for a user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  phone:
                    description: The user's main phone number.
                    type: string
                  preferredLanguage:
                    description: The value can be any that are available from the
                      view-languages operation.
                    type: string
                  secondaryEmail:
                    description: The user's secondary email address.
                    type: string
                  sessionTimeout:
                    description: The number of seconds it takes for the user's Control
                      Center session to time out if there hasn't been any activity.
                    type: number
                  state:
                    description: The user's state.
                    type: string
                  timeZone:
                    description: The user's time zone. The value can be any that are
                      available from the view-time-zones operation.
                    type: string
                  userNotifications:
                    description: Specifies email notifications the user receives for
                      products.
                    items:
                      properties:
                        apiClientCredentialExpiryNotification:
                          description: Enables notifications for expiring API client
                            credentials.
                          type: boolean
                        enableEmailNotifications:
                          description: Enables email notifications.
                          type: boolean
                        newUserNotification:
                          description: Enables notifications for group administrators
                            when the user creates other new users.
                          type: boolean
                        passwordExpiry:
                          description: Enables notifications for expiring passwords.
                          type: boolean
                        proactive:
                          description: Products for which the user gets notifications
                            for service issues.
                          items:
                            type: string
                          type: array
                        upgrade:
                          description: Products for which the user receives notifications
                            for upgrades.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  zipCode:
                    description: The user's five-digit ZIP code.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  address:
                    description: The user's street address.
                    type: string
                  authGrantsJson:
                    description: A user's per-group role assignments, in JSON form.
                    type: string
                  city:
                    description: The user's city.
                    type: string
                  contactType:
                    description: To help characterize the user, the value can be any
                      that are available from the view-contact-types operation.
                    type: string
                  country:
                    description: As part of the user's location, the value can be
                      any that are available from the view-supported-countries operation.
                    type: string
                  email:
                    description: The user's email address.
                    type: string
                  enableMfa:
                    description: Indicates whether multi-factor authentication is
                      allowed.
                    type: boolean
                  enableTfa:
                    description: Indicates whether two-factor authentication is allowed.
                    type: boolean
                  firstName:
                    description: The user's first name.
                    type: string
                  jobTitle:
                    description: The user's position at your company.
                    type: string
                  lastName:
                    description: The user's surname.
                    type: string
                  lock:
                    description: Flag to block a user account.
                    type: boolean
                  mobilePhone:
                    description: The user's mobile phone number.
                    type: string
                  passwordSecretRef:
                    description: New password for a user.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  phone:
                    description: The user's main phone number.
                    type: string
                  preferredLanguage:
                    description: The value can be any that are available from the
                      view-languages operation.
                    type: string
                  secondaryEmail:
                    description: The user's secondary email address.
                    type: string
                  sessionTimeout:
                    description: The number of seconds it takes for the user's Control
                      Center session to time out if there hasn't been any activity.
                    type: number
                  state:
                    description: The user's state.
                    type: string
                  timeZone:
                    description: The user's time zone. The value can be any that are
                      available from the view-time-zones operation.
                    type: string
                  userNotifications:
                    description: Specifies email notifications the user receives for
                      products.
                    items:
                      properties:
                        apiClientCredentialExpiryNotification:
                          description: Enables notifications for expiring API client
                            credentials.
                          type: boolean
                        enableEmailNotifications:
                          description: Enables email notifications.
                          type: boolean
                        newUserNotification:
                          description: Enables notifications for group administrators
                            when the user creates other new users.
                          type: boolean
                        passwordExpiry:
                          description: Enables notifications for expiring passwords.
                          type: boolean
                        proactive:
                          description: Products for which the user gets notifications
                            for service issues.
                          items:
                            type: string
                          type: array
                        upgrade:
                          description: Products for which the user receives notifications
                            for upgrades.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  zipCode:
                    description: The user's five-digit ZIP code.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.authGrantsJson is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.authGrantsJson)
                || (has(self.initProvider) && has(self.initProvider.authGrantsJson))'
            - message: spec.forProvider.country is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.country)
                || (has(self.initProvider) && has(self.initProvider.country))'
            - message: spec.forProvider.email is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.email)
                || (has(self.initProvider) && has(self.initProvider.email))'
            - message: spec.forProvider.firstName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.firstName)
                || (has(self.initProvider) && has(self.initProvider.firstName))'
            - message: spec.forProvider.lastName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.lastName)
                || (has(self.initProvider) && has(self.initProvider.lastName))'
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  address:
                    description: The user's street address.
                    type: string
                  authGrantsJson:
                    description: A user's per-group role assignments, in JSON form.
                    type: string
                  city:
                    description: The user's city.
                    type: string
                  contactType:
                    description: To help characterize the user, the value can be any
                      that are available from the view-contact-types operation.
                    type: string
                  country:
                    description: As part of the user's location, the value can be
                      any that are available from the view-supported-countries operation.
                    type: string
                  email:
                    description: The user's email address.
                    type: string
                  emailUpdatePending:
                    description: Indicates whether email update is pending.
                    type: boolean
                  enableMfa:
                    description: Indicates whether multi-factor authentication is
                      allowed.
                    type: boolean
                  enableTfa:
                    description: Indicates whether two-factor authentication is allowed.
                    type: boolean
                  firstName:
                    description: The user's first name.
                    type: string
                  id:
                    type: string
                  jobTitle:
                    description: The user's position at your company.
                    type: string
                  lastLogin:
                    description: ISO 8601 timestamp indicating when the user last
                      logged in.
                    type: string
                  lastName:
                    description: The user's surname.
                    type: string
                  lock:
                    description: Flag to block a user account.
                    type: boolean
                  mobilePhone:
                    description: The user's mobile phone number.
                    type: string
                  passwordExpiredAfter:
                    description: The date a user's password expires.
                    type: string
                  phone:
                    description: The user's main phone number.
                    type: string
                  preferredLanguage:
                    description: The value can be any that are available from the
                      view-languages operation.
                    type: string
                  secondaryEmail:
                    description: The user's secondary email address.
                    type: string
                  sessionTimeout:
                    description: The number of seconds it takes for the user's Control
                      Center session to time out if there hasn't been any activity.
                    type: number
                  state:
                    description: The user's state.
                    type: string
                  tfaConfigured:
                    description: Indicates whether two-factor authentication is configured.
                    type: boolean
                  timeZone:
                    description: The user's time zone. The value can be any that are
                      available from the view-time-zones operation.
                    type: string
                  userName:
                    description: A user's `loginId`. Typically, a user's email address.
                    type: string
                  userNotifications:
                    description: Specifies email notifications the user receives for
                      products.
                    items:
                      properties:
                        apiClientCredentialExpiryNotification:
                          description: Enables notifications for expiring API client
                            credentials.
                          type: boolean
                        enableEmailNotifications:
                          description: Enables email notifications.
                          type: boolean
                        newUserNotification:
                          description: Enables notifications for group administrators
                            when the user creates other new users.
                          type: boolean
                        passwordExpiry:
                          description: Enables notifications for expiring passwords.
                          type: boolean
                        proactive:
                          description: Products for which the user gets notifications
                            for service issues.
                          items:
                            type: string
                          type: array
                        upgrade:
                          description: Products for which the user receives notifications
                            for upgrades.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  zipCode:
                    description: The user's five-digit ZIP code.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

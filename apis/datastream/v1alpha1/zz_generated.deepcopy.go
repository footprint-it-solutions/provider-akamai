//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConnectorInitParameters) DeepCopyInto(out *AzureConnectorInitParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConnectorInitParameters.
func (in *AzureConnectorInitParameters) DeepCopy() *AzureConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConnectorObservation) DeepCopyInto(out *AzureConnectorObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConnectorObservation.
func (in *AzureConnectorObservation) DeepCopy() *AzureConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(AzureConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureConnectorParameters) DeepCopyInto(out *AzureConnectorParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureConnectorParameters.
func (in *AzureConnectorParameters) DeepCopy() *AzureConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(AzureConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogConnectorInitParameters) DeepCopyInto(out *DatadogConnectorInitParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogConnectorInitParameters.
func (in *DatadogConnectorInitParameters) DeepCopy() *DatadogConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatadogConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogConnectorObservation) DeepCopyInto(out *DatadogConnectorObservation) {
	*out = *in
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogConnectorObservation.
func (in *DatadogConnectorObservation) DeepCopy() *DatadogConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(DatadogConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogConnectorParameters) DeepCopyInto(out *DatadogConnectorParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogConnectorParameters.
func (in *DatadogConnectorParameters) DeepCopy() *DatadogConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(DatadogConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Datastream) DeepCopyInto(out *Datastream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Datastream.
func (in *Datastream) DeepCopy() *Datastream {
	if in == nil {
		return nil
	}
	out := new(Datastream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Datastream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamInitParameters) DeepCopyInto(out *DatastreamInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AzureConnector != nil {
		in, out := &in.AzureConnector, &out.AzureConnector
		*out = make([]AzureConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CollectMidgress != nil {
		in, out := &in.CollectMidgress, &out.CollectMidgress
		*out = new(bool)
		**out = **in
	}
	if in.ContractID != nil {
		in, out := &in.ContractID, &out.ContractID
		*out = new(string)
		**out = **in
	}
	if in.DatadogConnector != nil {
		in, out := &in.DatadogConnector, &out.DatadogConnector
		*out = make([]DatadogConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetFields != nil {
		in, out := &in.DatasetFields, &out.DatasetFields
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DeliveryConfiguration != nil {
		in, out := &in.DeliveryConfiguration, &out.DeliveryConfiguration
		*out = make([]DeliveryConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnector != nil {
		in, out := &in.ElasticsearchConnector, &out.ElasticsearchConnector
		*out = make([]ElasticsearchConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsConnector != nil {
		in, out := &in.GcsConnector, &out.GcsConnector
		*out = make([]GcsConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.HTTPSConnector != nil {
		in, out := &in.HTTPSConnector, &out.HTTPSConnector
		*out = make([]HTTPSConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogglyConnector != nil {
		in, out := &in.LogglyConnector, &out.LogglyConnector
		*out = make([]LogglyConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NewRelicConnector != nil {
		in, out := &in.NewRelicConnector, &out.NewRelicConnector
		*out = make([]NewRelicConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationEmails != nil {
		in, out := &in.NotificationEmails, &out.NotificationEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleConnector != nil {
		in, out := &in.OracleConnector, &out.OracleConnector
		*out = make([]OracleConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Connector != nil {
		in, out := &in.S3Connector, &out.S3Connector
		*out = make([]S3ConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SplunkConnector != nil {
		in, out := &in.SplunkConnector, &out.SplunkConnector
		*out = make([]SplunkConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.SumologicConnector != nil {
		in, out := &in.SumologicConnector, &out.SumologicConnector
		*out = make([]SumologicConnectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamInitParameters.
func (in *DatastreamInitParameters) DeepCopy() *DatastreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatastreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamList) DeepCopyInto(out *DatastreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Datastream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamList.
func (in *DatastreamList) DeepCopy() *DatastreamList {
	if in == nil {
		return nil
	}
	out := new(DatastreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatastreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamObservation) DeepCopyInto(out *DatastreamObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AzureConnector != nil {
		in, out := &in.AzureConnector, &out.AzureConnector
		*out = make([]AzureConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CollectMidgress != nil {
		in, out := &in.CollectMidgress, &out.CollectMidgress
		*out = new(bool)
		**out = **in
	}
	if in.ContractID != nil {
		in, out := &in.ContractID, &out.ContractID
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.DatadogConnector != nil {
		in, out := &in.DatadogConnector, &out.DatadogConnector
		*out = make([]DatadogConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetFields != nil {
		in, out := &in.DatasetFields, &out.DatasetFields
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DeliveryConfiguration != nil {
		in, out := &in.DeliveryConfiguration, &out.DeliveryConfiguration
		*out = make([]DeliveryConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnector != nil {
		in, out := &in.ElasticsearchConnector, &out.ElasticsearchConnector
		*out = make([]ElasticsearchConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsConnector != nil {
		in, out := &in.GcsConnector, &out.GcsConnector
		*out = make([]GcsConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.HTTPSConnector != nil {
		in, out := &in.HTTPSConnector, &out.HTTPSConnector
		*out = make([]HTTPSConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(float64)
		**out = **in
	}
	if in.LogglyConnector != nil {
		in, out := &in.LogglyConnector, &out.LogglyConnector
		*out = make([]LogglyConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModifiedBy != nil {
		in, out := &in.ModifiedBy, &out.ModifiedBy
		*out = new(string)
		**out = **in
	}
	if in.ModifiedDate != nil {
		in, out := &in.ModifiedDate, &out.ModifiedDate
		*out = new(string)
		**out = **in
	}
	if in.NewRelicConnector != nil {
		in, out := &in.NewRelicConnector, &out.NewRelicConnector
		*out = make([]NewRelicConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationEmails != nil {
		in, out := &in.NotificationEmails, &out.NotificationEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleConnector != nil {
		in, out := &in.OracleConnector, &out.OracleConnector
		*out = make([]OracleConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PapiJSON != nil {
		in, out := &in.PapiJSON, &out.PapiJSON
		*out = new(string)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Connector != nil {
		in, out := &in.S3Connector, &out.S3Connector
		*out = make([]S3ConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SplunkConnector != nil {
		in, out := &in.SplunkConnector, &out.SplunkConnector
		*out = make([]SplunkConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.StreamVersion != nil {
		in, out := &in.StreamVersion, &out.StreamVersion
		*out = new(float64)
		**out = **in
	}
	if in.SumologicConnector != nil {
		in, out := &in.SumologicConnector, &out.SumologicConnector
		*out = make([]SumologicConnectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamObservation.
func (in *DatastreamObservation) DeepCopy() *DatastreamObservation {
	if in == nil {
		return nil
	}
	out := new(DatastreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamParameters) DeepCopyInto(out *DatastreamParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.AzureConnector != nil {
		in, out := &in.AzureConnector, &out.AzureConnector
		*out = make([]AzureConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CollectMidgress != nil {
		in, out := &in.CollectMidgress, &out.CollectMidgress
		*out = new(bool)
		**out = **in
	}
	if in.ContractID != nil {
		in, out := &in.ContractID, &out.ContractID
		*out = new(string)
		**out = **in
	}
	if in.DatadogConnector != nil {
		in, out := &in.DatadogConnector, &out.DatadogConnector
		*out = make([]DatadogConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatasetFields != nil {
		in, out := &in.DatasetFields, &out.DatasetFields
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DeliveryConfiguration != nil {
		in, out := &in.DeliveryConfiguration, &out.DeliveryConfiguration
		*out = make([]DeliveryConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnector != nil {
		in, out := &in.ElasticsearchConnector, &out.ElasticsearchConnector
		*out = make([]ElasticsearchConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcsConnector != nil {
		in, out := &in.GcsConnector, &out.GcsConnector
		*out = make([]GcsConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.HTTPSConnector != nil {
		in, out := &in.HTTPSConnector, &out.HTTPSConnector
		*out = make([]HTTPSConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogglyConnector != nil {
		in, out := &in.LogglyConnector, &out.LogglyConnector
		*out = make([]LogglyConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NewRelicConnector != nil {
		in, out := &in.NewRelicConnector, &out.NewRelicConnector
		*out = make([]NewRelicConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationEmails != nil {
		in, out := &in.NotificationEmails, &out.NotificationEmails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleConnector != nil {
		in, out := &in.OracleConnector, &out.OracleConnector
		*out = make([]OracleConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.S3Connector != nil {
		in, out := &in.S3Connector, &out.S3Connector
		*out = make([]S3ConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SplunkConnector != nil {
		in, out := &in.SplunkConnector, &out.SplunkConnector
		*out = make([]SplunkConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	if in.SumologicConnector != nil {
		in, out := &in.SumologicConnector, &out.SumologicConnector
		*out = make([]SumologicConnectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamParameters.
func (in *DatastreamParameters) DeepCopy() *DatastreamParameters {
	if in == nil {
		return nil
	}
	out := new(DatastreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamSpec) DeepCopyInto(out *DatastreamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamSpec.
func (in *DatastreamSpec) DeepCopy() *DatastreamSpec {
	if in == nil {
		return nil
	}
	out := new(DatastreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatastreamStatus) DeepCopyInto(out *DatastreamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatastreamStatus.
func (in *DatastreamStatus) DeepCopy() *DatastreamStatus {
	if in == nil {
		return nil
	}
	out := new(DatastreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryConfigurationInitParameters) DeepCopyInto(out *DeliveryConfigurationInitParameters) {
	*out = *in
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = make([]FrequencyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UploadFilePrefix != nil {
		in, out := &in.UploadFilePrefix, &out.UploadFilePrefix
		*out = new(string)
		**out = **in
	}
	if in.UploadFileSuffix != nil {
		in, out := &in.UploadFileSuffix, &out.UploadFileSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryConfigurationInitParameters.
func (in *DeliveryConfigurationInitParameters) DeepCopy() *DeliveryConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryConfigurationObservation) DeepCopyInto(out *DeliveryConfigurationObservation) {
	*out = *in
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = make([]FrequencyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UploadFilePrefix != nil {
		in, out := &in.UploadFilePrefix, &out.UploadFilePrefix
		*out = new(string)
		**out = **in
	}
	if in.UploadFileSuffix != nil {
		in, out := &in.UploadFileSuffix, &out.UploadFileSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryConfigurationObservation.
func (in *DeliveryConfigurationObservation) DeepCopy() *DeliveryConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DeliveryConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeliveryConfigurationParameters) DeepCopyInto(out *DeliveryConfigurationParameters) {
	*out = *in
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = make([]FrequencyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UploadFilePrefix != nil {
		in, out := &in.UploadFilePrefix, &out.UploadFilePrefix
		*out = new(string)
		**out = **in
	}
	if in.UploadFileSuffix != nil {
		in, out := &in.UploadFileSuffix, &out.UploadFileSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeliveryConfigurationParameters.
func (in *DeliveryConfigurationParameters) DeepCopy() *DeliveryConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DeliveryConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectorInitParameters) DeepCopyInto(out *ElasticsearchConnectorInitParameters) {
	*out = *in
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	out.IndexNameSecretRef = in.IndexNameSecretRef
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
	out.UserNameSecretRef = in.UserNameSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectorInitParameters.
func (in *ElasticsearchConnectorInitParameters) DeepCopy() *ElasticsearchConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectorObservation) DeepCopyInto(out *ElasticsearchConnectorObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MTLS != nil {
		in, out := &in.MTLS, &out.MTLS
		*out = new(bool)
		**out = **in
	}
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectorObservation.
func (in *ElasticsearchConnectorObservation) DeepCopy() *ElasticsearchConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectorParameters) DeepCopyInto(out *ElasticsearchConnectorParameters) {
	*out = *in
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	out.IndexNameSecretRef = in.IndexNameSecretRef
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
	out.UserNameSecretRef = in.UserNameSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectorParameters.
func (in *ElasticsearchConnectorParameters) DeepCopy() *ElasticsearchConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrequencyInitParameters) DeepCopyInto(out *FrequencyInitParameters) {
	*out = *in
	if in.IntervalInSecs != nil {
		in, out := &in.IntervalInSecs, &out.IntervalInSecs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrequencyInitParameters.
func (in *FrequencyInitParameters) DeepCopy() *FrequencyInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrequencyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrequencyObservation) DeepCopyInto(out *FrequencyObservation) {
	*out = *in
	if in.IntervalInSecs != nil {
		in, out := &in.IntervalInSecs, &out.IntervalInSecs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrequencyObservation.
func (in *FrequencyObservation) DeepCopy() *FrequencyObservation {
	if in == nil {
		return nil
	}
	out := new(FrequencyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrequencyParameters) DeepCopyInto(out *FrequencyParameters) {
	*out = *in
	if in.IntervalInSecs != nil {
		in, out := &in.IntervalInSecs, &out.IntervalInSecs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrequencyParameters.
func (in *FrequencyParameters) DeepCopy() *FrequencyParameters {
	if in == nil {
		return nil
	}
	out := new(FrequencyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsConnectorInitParameters) DeepCopyInto(out *GcsConnectorInitParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsConnectorInitParameters.
func (in *GcsConnectorInitParameters) DeepCopy() *GcsConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsConnectorObservation) DeepCopyInto(out *GcsConnectorObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsConnectorObservation.
func (in *GcsConnectorObservation) DeepCopy() *GcsConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(GcsConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsConnectorParameters) DeepCopyInto(out *GcsConnectorParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsConnectorParameters.
func (in *GcsConnectorParameters) DeepCopy() *GcsConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(GcsConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSConnectorInitParameters) DeepCopyInto(out *HTTPSConnectorInitParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
	if in.UserNameSecretRef != nil {
		in, out := &in.UserNameSecretRef, &out.UserNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSConnectorInitParameters.
func (in *HTTPSConnectorInitParameters) DeepCopy() *HTTPSConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSConnectorObservation) DeepCopyInto(out *HTTPSConnectorObservation) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MTLS != nil {
		in, out := &in.MTLS, &out.MTLS
		*out = new(bool)
		**out = **in
	}
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSConnectorObservation.
func (in *HTTPSConnectorObservation) DeepCopy() *HTTPSConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSConnectorParameters) DeepCopyInto(out *HTTPSConnectorParameters) {
	*out = *in
	if in.AuthenticationType != nil {
		in, out := &in.AuthenticationType, &out.AuthenticationType
		*out = new(string)
		**out = **in
	}
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
	if in.UserNameSecretRef != nil {
		in, out := &in.UserNameSecretRef, &out.UserNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSConnectorParameters.
func (in *HTTPSConnectorParameters) DeepCopy() *HTTPSConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogglyConnectorInitParameters) DeepCopyInto(out *LogglyConnectorInitParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogglyConnectorInitParameters.
func (in *LogglyConnectorInitParameters) DeepCopy() *LogglyConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogglyConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogglyConnectorObservation) DeepCopyInto(out *LogglyConnectorObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogglyConnectorObservation.
func (in *LogglyConnectorObservation) DeepCopy() *LogglyConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(LogglyConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogglyConnectorParameters) DeepCopyInto(out *LogglyConnectorParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogglyConnectorParameters.
func (in *LogglyConnectorParameters) DeepCopy() *LogglyConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(LogglyConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewRelicConnectorInitParameters) DeepCopyInto(out *NewRelicConnectorInitParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewRelicConnectorInitParameters.
func (in *NewRelicConnectorInitParameters) DeepCopy() *NewRelicConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewRelicConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewRelicConnectorObservation) DeepCopyInto(out *NewRelicConnectorObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewRelicConnectorObservation.
func (in *NewRelicConnectorObservation) DeepCopy() *NewRelicConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(NewRelicConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewRelicConnectorParameters) DeepCopyInto(out *NewRelicConnectorParameters) {
	*out = *in
	out.AuthTokenSecretRef = in.AuthTokenSecretRef
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewRelicConnectorParameters.
func (in *NewRelicConnectorParameters) DeepCopy() *NewRelicConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(NewRelicConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleConnectorInitParameters) DeepCopyInto(out *OracleConnectorInitParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleConnectorInitParameters.
func (in *OracleConnectorInitParameters) DeepCopy() *OracleConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(OracleConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleConnectorObservation) DeepCopyInto(out *OracleConnectorObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleConnectorObservation.
func (in *OracleConnectorObservation) DeepCopy() *OracleConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(OracleConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OracleConnectorParameters) DeepCopyInto(out *OracleConnectorParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OracleConnectorParameters.
func (in *OracleConnectorParameters) DeepCopy() *OracleConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(OracleConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConnectorInitParameters) DeepCopyInto(out *S3ConnectorInitParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConnectorInitParameters.
func (in *S3ConnectorInitParameters) DeepCopy() *S3ConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(S3ConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConnectorObservation) DeepCopyInto(out *S3ConnectorObservation) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConnectorObservation.
func (in *S3ConnectorObservation) DeepCopy() *S3ConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(S3ConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3ConnectorParameters) DeepCopyInto(out *S3ConnectorParameters) {
	*out = *in
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretAccessKeySecretRef = in.SecretAccessKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3ConnectorParameters.
func (in *S3ConnectorParameters) DeepCopy() *S3ConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(S3ConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConnectorInitParameters) DeepCopyInto(out *SplunkConnectorInitParameters) {
	*out = *in
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	out.EventCollectorTokenSecretRef = in.EventCollectorTokenSecretRef
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConnectorInitParameters.
func (in *SplunkConnectorInitParameters) DeepCopy() *SplunkConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConnectorObservation) DeepCopyInto(out *SplunkConnectorObservation) {
	*out = *in
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.MTLS != nil {
		in, out := &in.MTLS, &out.MTLS
		*out = new(bool)
		**out = **in
	}
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConnectorObservation.
func (in *SplunkConnectorObservation) DeepCopy() *SplunkConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConnectorParameters) DeepCopyInto(out *SplunkConnectorParameters) {
	*out = *in
	if in.CACertSecretRef != nil {
		in, out := &in.CACertSecretRef, &out.CACertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	out.EventCollectorTokenSecretRef = in.EventCollectorTokenSecretRef
	if in.TLSHostname != nil {
		in, out := &in.TLSHostname, &out.TLSHostname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConnectorParameters.
func (in *SplunkConnectorParameters) DeepCopy() *SplunkConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SumologicConnectorInitParameters) DeepCopyInto(out *SumologicConnectorInitParameters) {
	*out = *in
	out.CollectorCodeSecretRef = in.CollectorCodeSecretRef
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SumologicConnectorInitParameters.
func (in *SumologicConnectorInitParameters) DeepCopy() *SumologicConnectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SumologicConnectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SumologicConnectorObservation) DeepCopyInto(out *SumologicConnectorObservation) {
	*out = *in
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SumologicConnectorObservation.
func (in *SumologicConnectorObservation) DeepCopy() *SumologicConnectorObservation {
	if in == nil {
		return nil
	}
	out := new(SumologicConnectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SumologicConnectorParameters) DeepCopyInto(out *SumologicConnectorParameters) {
	*out = *in
	out.CollectorCodeSecretRef = in.CollectorCodeSecretRef
	if in.CompressLogs != nil {
		in, out := &in.CompressLogs, &out.CompressLogs
		*out = new(bool)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderName != nil {
		in, out := &in.CustomHeaderName, &out.CustomHeaderName
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaderValue != nil {
		in, out := &in.CustomHeaderValue, &out.CustomHeaderValue
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SumologicConnectorParameters.
func (in *SumologicConnectorParameters) DeepCopy() *SumologicConnectorParameters {
	if in == nil {
		return nil
	}
	out := new(SumologicConnectorParameters)
	in.DeepCopyInto(out)
	return out
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomClientSequenceInitParameters struct {
	ConfigID *float64 `json:"configId,omitempty" tf:"config_id,omitempty"`

	CustomClientIds []*string `json:"customClientIds,omitempty" tf:"custom_client_ids,omitempty"`
}

type CustomClientSequenceObservation struct {
	ConfigID *float64 `json:"configId,omitempty" tf:"config_id,omitempty"`

	CustomClientIds []*string `json:"customClientIds,omitempty" tf:"custom_client_ids,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CustomClientSequenceParameters struct {

	// +kubebuilder:validation:Optional
	ConfigID *float64 `json:"configId,omitempty" tf:"config_id,omitempty"`

	// +kubebuilder:validation:Optional
	CustomClientIds []*string `json:"customClientIds,omitempty" tf:"custom_client_ids,omitempty"`
}

// CustomClientSequenceSpec defines the desired state of CustomClientSequence
type CustomClientSequenceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomClientSequenceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomClientSequenceInitParameters `json:"initProvider,omitempty"`
}

// CustomClientSequenceStatus defines the observed state of CustomClientSequence.
type CustomClientSequenceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomClientSequenceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomClientSequence is the Schema for the CustomClientSequences API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,akamai}
type CustomClientSequence struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.configId) || (has(self.initProvider) && has(self.initProvider.configId))",message="spec.forProvider.configId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.customClientIds) || (has(self.initProvider) && has(self.initProvider.customClientIds))",message="spec.forProvider.customClientIds is a required parameter"
	Spec   CustomClientSequenceSpec   `json:"spec"`
	Status CustomClientSequenceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomClientSequenceList contains a list of CustomClientSequences
type CustomClientSequenceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomClientSequence `json:"items"`
}

// Repository type metadata.
var (
	CustomClientSequence_Kind             = "CustomClientSequence"
	CustomClientSequence_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomClientSequence_Kind}.String()
	CustomClientSequence_KindAPIVersion   = CustomClientSequence_Kind + "." + CRDGroupVersion.String()
	CustomClientSequence_GroupVersionKind = CRDGroupVersion.WithKind(CustomClientSequence_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomClientSequence{}, &CustomClientSequenceList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/footprint-it-solutions/provider-akamai/apis/appsec/v1alpha1"
	v1alpha1botman "github.com/footprint-it-solutions/provider-akamai/apis/botman/v1alpha1"
	v1alpha1clientlist "github.com/footprint-it-solutions/provider-akamai/apis/clientlist/v1alpha1"
	v1alpha1cloudlets "github.com/footprint-it-solutions/provider-akamai/apis/cloudlets/v1alpha1"
	v1alpha1cloudwrapper "github.com/footprint-it-solutions/provider-akamai/apis/cloudwrapper/v1alpha1"
	v1alpha1cp "github.com/footprint-it-solutions/provider-akamai/apis/cp/v1alpha1"
	v1alpha1cps "github.com/footprint-it-solutions/provider-akamai/apis/cps/v1alpha1"
	v1alpha1datastream "github.com/footprint-it-solutions/provider-akamai/apis/datastream/v1alpha1"
	v1alpha1dns "github.com/footprint-it-solutions/provider-akamai/apis/dns/v1alpha1"
	v1alpha1edge "github.com/footprint-it-solutions/provider-akamai/apis/edge/v1alpha1"
	v1alpha1edgekv "github.com/footprint-it-solutions/provider-akamai/apis/edgekv/v1alpha1"
	v1alpha1edgeworker "github.com/footprint-it-solutions/provider-akamai/apis/edgeworker/v1alpha1"
	v1alpha1gtm "github.com/footprint-it-solutions/provider-akamai/apis/gtm/v1alpha1"
	v1alpha1iam "github.com/footprint-it-solutions/provider-akamai/apis/iam/v1alpha1"
	v1alpha1imaging "github.com/footprint-it-solutions/provider-akamai/apis/imaging/v1alpha1"
	v1alpha1networklist "github.com/footprint-it-solutions/provider-akamai/apis/networklist/v1alpha1"
	v1alpha1property "github.com/footprint-it-solutions/provider-akamai/apis/property/v1alpha1"
	v1alpha1apis "github.com/footprint-it-solutions/provider-akamai/apis/v1alpha1"
	v1beta1 "github.com/footprint-it-solutions/provider-akamai/apis/v1beta1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1botman.SchemeBuilder.AddToScheme,
		v1alpha1clientlist.SchemeBuilder.AddToScheme,
		v1alpha1cloudlets.SchemeBuilder.AddToScheme,
		v1alpha1cloudwrapper.SchemeBuilder.AddToScheme,
		v1alpha1cp.SchemeBuilder.AddToScheme,
		v1alpha1cps.SchemeBuilder.AddToScheme,
		v1alpha1datastream.SchemeBuilder.AddToScheme,
		v1alpha1dns.SchemeBuilder.AddToScheme,
		v1alpha1edge.SchemeBuilder.AddToScheme,
		v1alpha1edgekv.SchemeBuilder.AddToScheme,
		v1alpha1edgeworker.SchemeBuilder.AddToScheme,
		v1alpha1gtm.SchemeBuilder.AddToScheme,
		v1alpha1iam.SchemeBuilder.AddToScheme,
		v1alpha1imaging.SchemeBuilder.AddToScheme,
		v1alpha1networklist.SchemeBuilder.AddToScheme,
		v1alpha1property.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}

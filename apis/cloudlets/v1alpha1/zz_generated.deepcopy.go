//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancer) DeepCopyInto(out *ApplicationLoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancer.
func (in *ApplicationLoadBalancer) DeepCopy() *ApplicationLoadBalancer {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationLoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivation) DeepCopyInto(out *ApplicationLoadBalancerActivation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivation.
func (in *ApplicationLoadBalancerActivation) DeepCopy() *ApplicationLoadBalancerActivation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationLoadBalancerActivation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationInitParameters) DeepCopyInto(out *ApplicationLoadBalancerActivationInitParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationInitParameters.
func (in *ApplicationLoadBalancerActivationInitParameters) DeepCopy() *ApplicationLoadBalancerActivationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationList) DeepCopyInto(out *ApplicationLoadBalancerActivationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationLoadBalancerActivation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationList.
func (in *ApplicationLoadBalancerActivationList) DeepCopy() *ApplicationLoadBalancerActivationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationLoadBalancerActivationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationObservation) DeepCopyInto(out *ApplicationLoadBalancerActivationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationObservation.
func (in *ApplicationLoadBalancerActivationObservation) DeepCopy() *ApplicationLoadBalancerActivationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationParameters) DeepCopyInto(out *ApplicationLoadBalancerActivationParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationParameters.
func (in *ApplicationLoadBalancerActivationParameters) DeepCopy() *ApplicationLoadBalancerActivationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationSpec) DeepCopyInto(out *ApplicationLoadBalancerActivationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationSpec.
func (in *ApplicationLoadBalancerActivationSpec) DeepCopy() *ApplicationLoadBalancerActivationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerActivationStatus) DeepCopyInto(out *ApplicationLoadBalancerActivationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerActivationStatus.
func (in *ApplicationLoadBalancerActivationStatus) DeepCopy() *ApplicationLoadBalancerActivationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerActivationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerInitParameters) DeepCopyInto(out *ApplicationLoadBalancerInitParameters) {
	*out = *in
	if in.BalancingType != nil {
		in, out := &in.BalancingType, &out.BalancingType
		*out = new(string)
		**out = **in
	}
	if in.DataCenters != nil {
		in, out := &in.DataCenters, &out.DataCenters
		*out = make([]DataCentersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LivenessSettings != nil {
		in, out := &in.LivenessSettings, &out.LivenessSettings
		*out = make([]LivenessSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginDescription != nil {
		in, out := &in.OriginDescription, &out.OriginDescription
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerInitParameters.
func (in *ApplicationLoadBalancerInitParameters) DeepCopy() *ApplicationLoadBalancerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerList) DeepCopyInto(out *ApplicationLoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationLoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerList.
func (in *ApplicationLoadBalancerList) DeepCopy() *ApplicationLoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationLoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerObservation) DeepCopyInto(out *ApplicationLoadBalancerObservation) {
	*out = *in
	if in.BalancingType != nil {
		in, out := &in.BalancingType, &out.BalancingType
		*out = new(string)
		**out = **in
	}
	if in.DataCenters != nil {
		in, out := &in.DataCenters, &out.DataCenters
		*out = make([]DataCentersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LivenessSettings != nil {
		in, out := &in.LivenessSettings, &out.LivenessSettings
		*out = make([]LivenessSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginDescription != nil {
		in, out := &in.OriginDescription, &out.OriginDescription
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerObservation.
func (in *ApplicationLoadBalancerObservation) DeepCopy() *ApplicationLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerParameters) DeepCopyInto(out *ApplicationLoadBalancerParameters) {
	*out = *in
	if in.BalancingType != nil {
		in, out := &in.BalancingType, &out.BalancingType
		*out = new(string)
		**out = **in
	}
	if in.DataCenters != nil {
		in, out := &in.DataCenters, &out.DataCenters
		*out = make([]DataCentersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LivenessSettings != nil {
		in, out := &in.LivenessSettings, &out.LivenessSettings
		*out = make([]LivenessSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginDescription != nil {
		in, out := &in.OriginDescription, &out.OriginDescription
		*out = new(string)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerParameters.
func (in *ApplicationLoadBalancerParameters) DeepCopy() *ApplicationLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerSpec) DeepCopyInto(out *ApplicationLoadBalancerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerSpec.
func (in *ApplicationLoadBalancerSpec) DeepCopy() *ApplicationLoadBalancerSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationLoadBalancerStatus) DeepCopyInto(out *ApplicationLoadBalancerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationLoadBalancerStatus.
func (in *ApplicationLoadBalancerStatus) DeepCopy() *ApplicationLoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationLoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentersInitParameters) DeepCopyInto(out *DataCentersInitParameters) {
	*out = *in
	if in.City != nil {
		in, out := &in.City, &out.City
		*out = new(string)
		**out = **in
	}
	if in.CloudServerHostHeaderOverride != nil {
		in, out := &in.CloudServerHostHeaderOverride, &out.CloudServerHostHeaderOverride
		*out = new(bool)
		**out = **in
	}
	if in.CloudService != nil {
		in, out := &in.CloudService, &out.CloudService
		*out = new(bool)
		**out = **in
	}
	if in.Continent != nil {
		in, out := &in.Continent, &out.Continent
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.LivenessHosts != nil {
		in, out := &in.LivenessHosts, &out.LivenessHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
	if in.StateOrProvince != nil {
		in, out := &in.StateOrProvince, &out.StateOrProvince
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentersInitParameters.
func (in *DataCentersInitParameters) DeepCopy() *DataCentersInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataCentersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentersObservation) DeepCopyInto(out *DataCentersObservation) {
	*out = *in
	if in.City != nil {
		in, out := &in.City, &out.City
		*out = new(string)
		**out = **in
	}
	if in.CloudServerHostHeaderOverride != nil {
		in, out := &in.CloudServerHostHeaderOverride, &out.CloudServerHostHeaderOverride
		*out = new(bool)
		**out = **in
	}
	if in.CloudService != nil {
		in, out := &in.CloudService, &out.CloudService
		*out = new(bool)
		**out = **in
	}
	if in.Continent != nil {
		in, out := &in.Continent, &out.Continent
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.LivenessHosts != nil {
		in, out := &in.LivenessHosts, &out.LivenessHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
	if in.StateOrProvince != nil {
		in, out := &in.StateOrProvince, &out.StateOrProvince
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentersObservation.
func (in *DataCentersObservation) DeepCopy() *DataCentersObservation {
	if in == nil {
		return nil
	}
	out := new(DataCentersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCentersParameters) DeepCopyInto(out *DataCentersParameters) {
	*out = *in
	if in.City != nil {
		in, out := &in.City, &out.City
		*out = new(string)
		**out = **in
	}
	if in.CloudServerHostHeaderOverride != nil {
		in, out := &in.CloudServerHostHeaderOverride, &out.CloudServerHostHeaderOverride
		*out = new(bool)
		**out = **in
	}
	if in.CloudService != nil {
		in, out := &in.CloudService, &out.CloudService
		*out = new(bool)
		**out = **in
	}
	if in.Continent != nil {
		in, out := &in.Continent, &out.Continent
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.LivenessHosts != nil {
		in, out := &in.LivenessHosts, &out.LivenessHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.OriginID != nil {
		in, out := &in.OriginID, &out.OriginID
		*out = new(string)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
	if in.StateOrProvince != nil {
		in, out := &in.StateOrProvince, &out.StateOrProvince
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCentersParameters.
func (in *DataCentersParameters) DeepCopy() *DataCentersParameters {
	if in == nil {
		return nil
	}
	out := new(DataCentersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessSettingsInitParameters) DeepCopyInto(out *LivenessSettingsInitParameters) {
	*out = *in
	if in.AdditionalHeaders != nil {
		in, out := &in.AdditionalHeaders, &out.AdditionalHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PeerCertificateVerification != nil {
		in, out := &in.PeerCertificateVerification, &out.PeerCertificateVerification
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestString != nil {
		in, out := &in.RequestString, &out.RequestString
		*out = new(string)
		**out = **in
	}
	if in.ResponseString != nil {
		in, out := &in.ResponseString, &out.ResponseString
		*out = new(string)
		**out = **in
	}
	if in.Status3XxFailure != nil {
		in, out := &in.Status3XxFailure, &out.Status3XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status4XxFailure != nil {
		in, out := &in.Status4XxFailure, &out.Status4XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status5XxFailure != nil {
		in, out := &in.Status5XxFailure, &out.Status5XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessSettingsInitParameters.
func (in *LivenessSettingsInitParameters) DeepCopy() *LivenessSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LivenessSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessSettingsObservation) DeepCopyInto(out *LivenessSettingsObservation) {
	*out = *in
	if in.AdditionalHeaders != nil {
		in, out := &in.AdditionalHeaders, &out.AdditionalHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PeerCertificateVerification != nil {
		in, out := &in.PeerCertificateVerification, &out.PeerCertificateVerification
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestString != nil {
		in, out := &in.RequestString, &out.RequestString
		*out = new(string)
		**out = **in
	}
	if in.ResponseString != nil {
		in, out := &in.ResponseString, &out.ResponseString
		*out = new(string)
		**out = **in
	}
	if in.Status3XxFailure != nil {
		in, out := &in.Status3XxFailure, &out.Status3XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status4XxFailure != nil {
		in, out := &in.Status4XxFailure, &out.Status4XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status5XxFailure != nil {
		in, out := &in.Status5XxFailure, &out.Status5XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessSettingsObservation.
func (in *LivenessSettingsObservation) DeepCopy() *LivenessSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(LivenessSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LivenessSettingsParameters) DeepCopyInto(out *LivenessSettingsParameters) {
	*out = *in
	if in.AdditionalHeaders != nil {
		in, out := &in.AdditionalHeaders, &out.AdditionalHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PeerCertificateVerification != nil {
		in, out := &in.PeerCertificateVerification, &out.PeerCertificateVerification
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RequestString != nil {
		in, out := &in.RequestString, &out.RequestString
		*out = new(string)
		**out = **in
	}
	if in.ResponseString != nil {
		in, out := &in.ResponseString, &out.ResponseString
		*out = new(string)
		**out = **in
	}
	if in.Status3XxFailure != nil {
		in, out := &in.Status3XxFailure, &out.Status3XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status4XxFailure != nil {
		in, out := &in.Status4XxFailure, &out.Status4XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Status5XxFailure != nil {
		in, out := &in.Status5XxFailure, &out.Status5XxFailure
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LivenessSettingsParameters.
func (in *LivenessSettingsParameters) DeepCopy() *LivenessSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(LivenessSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivation) DeepCopyInto(out *PolicyActivation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivation.
func (in *PolicyActivation) DeepCopy() *PolicyActivation {
	if in == nil {
		return nil
	}
	out := new(PolicyActivation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyActivation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationInitParameters) DeepCopyInto(out *PolicyActivationInitParameters) {
	*out = *in
	if in.AssociatedProperties != nil {
		in, out := &in.AssociatedProperties, &out.AssociatedProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationInitParameters.
func (in *PolicyActivationInitParameters) DeepCopy() *PolicyActivationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationList) DeepCopyInto(out *PolicyActivationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyActivation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationList.
func (in *PolicyActivationList) DeepCopy() *PolicyActivationList {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyActivationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationObservation) DeepCopyInto(out *PolicyActivationObservation) {
	*out = *in
	if in.AssociatedProperties != nil {
		in, out := &in.AssociatedProperties, &out.AssociatedProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsShared != nil {
		in, out := &in.IsShared, &out.IsShared
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationObservation.
func (in *PolicyActivationObservation) DeepCopy() *PolicyActivationObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationParameters) DeepCopyInto(out *PolicyActivationParameters) {
	*out = *in
	if in.AssociatedProperties != nil {
		in, out := &in.AssociatedProperties, &out.AssociatedProperties
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationParameters.
func (in *PolicyActivationParameters) DeepCopy() *PolicyActivationParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationSpec) DeepCopyInto(out *PolicyActivationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationSpec.
func (in *PolicyActivationSpec) DeepCopy() *PolicyActivationSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyActivationStatus) DeepCopyInto(out *PolicyActivationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyActivationStatus.
func (in *PolicyActivationStatus) DeepCopy() *PolicyActivationStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyActivationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.CloudletCode != nil {
		in, out := &in.CloudletCode, &out.CloudletCode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.IsShared != nil {
		in, out := &in.IsShared, &out.IsShared
		*out = new(bool)
		**out = **in
	}
	if in.MatchRuleFormat != nil {
		in, out := &in.MatchRuleFormat, &out.MatchRuleFormat
		*out = new(string)
		**out = **in
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.CloudletCode != nil {
		in, out := &in.CloudletCode, &out.CloudletCode
		*out = new(string)
		**out = **in
	}
	if in.CloudletID != nil {
		in, out := &in.CloudletID, &out.CloudletID
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsShared != nil {
		in, out := &in.IsShared, &out.IsShared
		*out = new(bool)
		**out = **in
	}
	if in.MatchRuleFormat != nil {
		in, out := &in.MatchRuleFormat, &out.MatchRuleFormat
		*out = new(string)
		**out = **in
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.CloudletCode != nil {
		in, out := &in.CloudletCode, &out.CloudletCode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.IsShared != nil {
		in, out := &in.IsShared, &out.IsShared
		*out = new(bool)
		**out = **in
	}
	if in.MatchRuleFormat != nil {
		in, out := &in.MatchRuleFormat, &out.MatchRuleFormat
		*out = new(string)
		**out = **in
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyStatus) DeepCopyInto(out *PolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyStatus.
func (in *PolicyStatus) DeepCopy() *PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyStatus)
	in.DeepCopyInto(out)
	return out
}
